"""
Django settings for MyBlogs project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8^6poq6h^m0_-nwj+5419pw()72zp8#5u23(qg721h-84u2k-('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # FIXME　项目部署时要修改成 DEBUG = False

ALLOWED_HOSTS = ['*']  # FIXME 项目部署的时候要修改成服务器的IP和域名

# Application definition
INSTALLED_APPS = [
    'simpleui.apps.SimpleApp',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'captcha',  # 登录注册验证码  pip install django-simple-captcha
    # 参考博客：https://blog.csdn.net/qq_37648632/article/details/83149803
    # 官方文档：https://django-simple-captcha.readthedocs.io/en/latest/
    'guardian',  # pip install django-guardian  对象级别的权限控制
    'rest_framework',  # django-rest-framework
    'blogs',
    'users',
]

# 加入身份验证
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # 这是Django默认的
    'guardian.backends.ObjectPermissionBackend',  # 这是guardian的
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MyBlogs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MyBlogs.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

CACHES = {
    # 使用 Redis 缓存 pip install django-redis
    "redis": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            # "PASSWORD": "mysecret",
            "IGNORE_EXCEPTIONS": True,
        },
    },
    # django 默认缓存
    'spare': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',  # NOQA
    },
}
CACHES['default'] = CACHES['spare']  # NOQA

# 设置缓存默认过期时间（非必须)
REDIS_TIMEOUT = 7 * 24 * 60 * 60
CUBES_REDIS_TIMEOUT = 60 * 60
NEVER_REDIS_TIMEOUT = 365 * 24 * 60 * 60

# 将 Session 存放在缓存里
# SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# SESSION_CACHE_ALIAS = "default"

REST_FRAMEWORK = {
    # 版本控制
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.URLPathVersioning",
    "DEFAULT_VERSION": "v1",
    "ALLOWED_VERSIONS": ["v1", "v2", ],
    "VERSION_PARAM": "version",

    # 默认渲染器
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",  # 生产环境可以注释掉
    ],
    # 默认解析器
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
        "rest_framework.parsers.FormParser",
    ],
}

# Simple UI 相关设置  https://simpleui.88cto.com/docs/simpleui/QUICK.html#%E9%85%8D%E7%BD%AE
SIMPLEUI_ANALYSIS = False  # 不收集分析信息
SIMPLEUI_HOME_INFO = False  # 隐藏服务器信息
SIMPLEUI_LOGIN_PARTICLES = True  # 登录页粒子动画
# SIMPLEUI_LOGO = '/static/logo.png'  # 后台站点 LOGO
SIMPLEUI_ICON = {
    # 后台界面图标
    # https://fontawesome.com/icons?d=gallery
    # http://www.fontawesome.com.cn/faicons/
    # https://element.eleme.cn/#/zh-CN/component/icon
    '博客管理': 'el-icon-folder-opened',
    '文章内容': 'el-icon-document',
    '文章标签': 'el-icon-collection-tag',
    '文章分类': 'el-icon-files',
    '文章评论与回复': 'el-icon-chat-dot-round',
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

LOGIN_URL = '/user/login'
